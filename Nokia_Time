#include <ESP8266WiFi.h>
#include <NTPClient.h>
#include <WiFiUdp.h>
#include <Adafruit_GFX.h>
#include <Adafruit_PCD8544.h>
#include <SPI.h>

#define CLK D1
#define DIN D2
#define DC  D5
#define CE  D6
#define RST D7
#define POT A0  // Define the potentiometer pin

// WiFi credentials
const char *ssid = "yourSSID";
const char *password = "yourPASSWORD";

// Set up the NTP client with UTC+2 for Cape Town
WiFiUDP ntpUDP;
NTPClient timeClient(ntpUDP, "pool.ntp.org", 2 * 3600, 60000);  // Adjust the time zone offset to UTC+2

// Initialize the Nokia 5110 display
Adafruit_PCD8544 display = Adafruit_PCD8544(CLK ,DIN, DC, CE, RST);

void setup() {
  Serial.begin(115200);

  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");

  // Initialize the NTP client
  timeClient.begin();

  // Initialize the Nokia display
  display.begin();
  display.setContrast(50);  // Set an initial contrast
  display.setRotation(2);  // Rotate the display 0=0, 1=90, 2=180, 3= 270 degrees clockwise
  display.clearDisplay();
}

void loop() {
  // Update the NTP client to get the latest time
  timeClient.update();

  // Get the current time
  String formattedTime = timeClient.getFormattedTime();
  
  // Read the potentiometer value
  int potValue = analogRead(POT);
  // Map the potentiometer value (0-1023) to the contrast range (0-100)
  int contrast = map(potValue, 0, 1023, 0, 100);
  display.setContrast(contrast); // Update the display contrast

  // Display time on the Nokia 5110 display
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(BLACK);
  display.setCursor(0, 0);
  display.println("Time:");
  display.setTextSize(2);  // Larger text for the time
  display.println(formattedTime);
  display.display();

  delay(1000);  // Update the time every second
}
